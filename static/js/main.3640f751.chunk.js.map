{"version":3,"sources":["communication/Serial2.ts","components/Controls/Uploader.tsx","communication/parseSerial.ts","communication/Serial.ts","communication/bindingsHelper.ts","dsp/spectrum.ts","win.ts","communication/bindings.tsx","components/Plot/hooks.ts","components/Plot/TriggerVoltageHandle.tsx","components/Plot/TriggerPosHandle.tsx","components/formatters.ts","components/Plot/XAxis.tsx","components/Plot/YAxis.tsx","components/Plot/Measure.tsx","components/Plot/Plot.tsx","components/Controls/Trigger.tsx","components/Controls/Channels.tsx","components/Controls/hooks.ts","components/Controls/Amplifier.tsx","components/Controls/TimeScales.tsx","components/Controls/Scales.tsx","components/Controls/SerialControls.tsx","components/Controls/Stats.tsx","components/Controls/index.tsx","components/About.tsx","components/EnableSerialInstructions.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["serial","port","reader","writer","console","log","this","undefined","cancel","close","options","navigator","getPorts","Error","_connect","requestPort","baudRate","dataBits","stopBits","parity","bufferSize","rtscts","xon","xoff","open","ReadableWebToNodeStream","readable","writable","getWriter","rwStream","write","buffer","onDone","then","window","serial2","stk500","Stk500","bootload","stream","hex","opt","progress","a","sent","what","percent","Math","round","length","pageSize","async","series","sync","bind","timeout","verifySignature","signature","setOptions","enterProgrammingMode","upload","exitProgrammingMode","serialOptions","board","Buffer","from","Uploader","useState","setPercent","status","setStatus","isProgressHidden","setIsProgressHidden","message","setMessage","onClick","fetch","process","response","text","intel_hex","parse","data","connect","serialStream","error","toString","color","icon","Line","pull","count","result","slice","i","Array","get_uint8_t","res","get_bool","get_uint16_t","l","h","parseSerial","myData","triggerVoltage","triggerDir","secPerSample","arr","int","reverse","reduce","acc","curr","sign","exp","mantissa","float32","parseInt","pow","get_float32_t","triggerPos","amplifier","triggerMode","triggerChannel","isChannelOn","needData","forceUIUpdate","didTrigger","freeMemory","sentSamples","samplesPerBuffer","analogs","digitalBytes","digitals","map","mask","byte","vMax","voltageRanges","buffers","analog","n","digital","bit","channel","v","t","END_SEQUENCE","indexesOfSequence","needle","haystack","strNeedle","c","String","fromCharCode","join","strHaystack","start","indexOf","sleep","ms","Promise","r","setTimeout","readbuffer","outputDone","ports","chackOptionsForAndroidCompat","baudrate","databits","stopbits","buffersize","getReader","encoder","TextEncoderStream","pipeTo","textOutputStream","callback","consume","busy","end","dataFrame","checksumShould","pop","checksumIs","prev","running","read","value","push","produce","memoSelector","theAtom","selector","key","get","set","newValue","makeIntercom","ui2mcu","mcu2ui","defaultValue","default","remoteState","atom","serial_write","send","reset","DefaultValue","receive","addEventListener","getFFT","signal","dt","mid","nextPowerOf2","ceil","log2","padding","paddedSignal","fill","ft","TriggerDirection","useTriggerVoltage","voltageRangeState","vmin","vpp","useTriggerPos","vavr","voltagesState","samples","useSamplesPerBuffer","useSecPerSample","requestData","TriggerMode","useTriggerDirection","RISING","FALLING","useTriggerChannel","useIsChannelOn","b","_","Boolean","constrain","min","max","useAmplifier","useTriggerMode","Object","values","AUTO","dataState","isRunningState","oversamplingFactorState","XYModeState","fftState0","fftState1","didTriggerState","freeMemoryState","frequencyState","last","rollingAverage","firstCross","lastCross","getFrequencyCount","vmax","previous","current","sum","sendFullState","receiveFullState","allDataState","newData","win","$recoilDebugStates","some","oldBuffers","oversamplingFactor","factor","newBuffer","oldBuffer","j","oversample","SLOW","oldLastT","totalSecs","withFFT","SINGLE","margin","xDomainSelector","yDomainSelector","plotWidthSelector","plotHeightSelector","xScaleSelector","xDomain","width","d3","domain","range","yScaleSelector","yDomain","height","rangeRound","lineSelector","xScale","yScale","x","y","XYLineSelector","xMax","yMax","d","TriggerVoltageHandle","line","forwardRef","_props","ref","draggingTV","setDraggingTV","useRecoilValue","useRecoilState","setTriggerVoltage","useImperativeHandle","onMouseUp","onMouseMove","e","invert","nativeEvent","offsetY","scaledY","className","x1","x2","y1","y2","onMouseDown","preventDefault","stopPropagation","dy","dx","toFixed","displayName","TriggerPosHandle","draggingTP","setDraggingTP","setTriggerPos","offsetX","scaledX","float","digits","formatTime","s","Number","isNaN","m","us","formatVoltage","mv","uv","XAxis","nodeRef","useRef","gEl","useLayoutEffect","xTicks","call","g","attr","tickValues","tickPadding","tickSize","tickFormat","tickSizeOuter","select","remove","YAxis","yTicks","_d","path","Measure","dragging","setDragging","startPos","setStartPos","endPos","setEndPos","isEqual","XYCurve","xyMode","xyLine","Curves","ds","ffts","Plot","triggerPosRef","triggerVoltageRef","measureRef","containerRef","useSize","setPlotHeight","useSetRecoilState","setPlotWidth","useEffect","onMouseLeave","ButtonToolbarStyle","marginTop","display","justifyContent","alignItems","Trigger","isRunning","setTriggerMode","setTriggerChannel","triggerDirection","setTriggerDirection","tooFastForSlowMode","Panel","header","shaded","collapsible","defaultExpanded","ButtonToolbar","style","ButtonGroup","name","idx","Button","appearance","disabled","includes","size","mode","IconButton","Icon","Tag","Channels","setOversamplingFactor","setXYMode","fft0","setFFT0","fft1","setFFT1","setIsChannelOn","Slider","onChange","step","useActiveBtns","state","setState","clearTimeout","timeoutId","Amplifier","setAmplifier","isUpActive","tapUp","isDownActive","tapDown","MouseTrap","unbind","marginBottom","active","SelectPicker","searchable","cleanable","label","flex","marginLeft","marginRight","offset","list","TimeScales","setSecPerSample","isLeftActive","tapLeft","isRightActive","tapRight","perSample","secPerDivision","Scales","setIsRunning","isSpaceActive","tapSpace","backgroundColor","SerialControls","setError","serialState","setSerialState","setAllData","onData","connectWithPaired","catch","placement","Connected","Disconnected","FreeMemory","Frequency","frequency","hz","khz","formatFreq","Wavelength","Voltages","voltages","Stats","Controls","About","href","chromeFlagsUrl","styles","verticalAlign","EnableSerialInstructions","copy","useCopy","bordered","overflow","zoom","fontSize","Steps","vertical","Item","title","description","Notification","success","alt","src","AndroidSerialLoader","React","lazy","isAndroid","userAgent","toLowerCase","App","raw","match","getChromeVersion","Container","Content","Sidebar","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3640f751.chunk.js","sourcesContent":["// based in wonky  https://github.com/yaakov-h/uniden-web-controller/blob/master/serial.js\nimport { ReadableWebToNodeStream } from 'readable-web-to-node-stream'\nimport { NavigatorSerial, Port, SerialOptions } from './Serial'\n\ndeclare global {\n  interface Window {\n    serial2: Serial\n  }\n  interface Navigator {\n    serial: NavigatorSerial\n  }\n}\n\nexport class Serial {\n  port?: Port\n  reader?: NodeJS.ReadableStream\n  writer?: WritableStreamDefaultWriter\n\n  async close() {\n    console.log('closing')\n    if (this.reader) {\n      const reader = this.reader\n      this.reader = undefined\n      // @ts-ignore\n      await reader.reader.cancel()\n      // await this.reader.close() // this blocks if uploading failed\n    }\n    if (this.writer) {\n      const writer = this.writer\n      this.writer = undefined\n      await writer.close()\n    }\n    if (this.port) {\n      const port = this.port\n      this.port = undefined\n      await port.close()\n    }\n    console.log('closed')\n  }\n  async connectWithPaired(options: SerialOptions) {\n    const [port] = await navigator.serial.getPorts()\n    if (!port) throw new Error('no paired')\n    return this._connect(options, port)\n  }\n  async connect(options: SerialOptions) {\n    const port = await navigator.serial.requestPort({})\n    return this._connect(options, port)\n  }\n  async _connect(options: SerialOptions, port: Port) {\n    options = {\n      baudRate: 9600,\n      dataBits: 8,\n      stopBits: 1,\n      parity: 'none',\n      bufferSize: 255,\n      rtscts: false,\n      xon: false,\n      xoff: false,\n      ...options\n    }\n    if (this.port) await this.close()\n    this.port = port\n    await this.port.open(options)\n    this.reader = new ReadableWebToNodeStream(this.port.readable)\n    this.writer = this.port.writable.getWriter()\n\n    // next I'm faking a NodeJS.ReadWriteStream\n    const rwStream = (this.reader as unknown) as NodeJS.ReadWriteStream\n    // @ts-ignore\n    rwStream.write = (\n      buffer: string | Uint8Array,\n      onDone: (err: Error | null | undefined) => void\n    ) => {\n      this.writer!.write(buffer).then(() => onDone(null), onDone)\n      return true\n    }\n    return rwStream\n  }\n}\nconst serial = new Serial()\n\nexport default serial\n\nwindow.serial2 = serial\n// window.addEventListener('beforeunload', () => serial.close())\n","import React, { useState } from 'react'\nimport { Button, Icon, Progress } from 'rsuite'\nimport serial2 from '../../communication/Serial2'\nimport async from 'async'\nimport intel_hex from 'intel-hex'\nimport Stk500 from 'stk500'\n\nconst stk500 = new Stk500()\nconst bootload = async (\n  stream: NodeJS.ReadWriteStream,\n  hex: string,\n  opt: typeof board,\n  progress: (percent: number) => void\n) => {\n  let sent = 0\n  stk500.log = (what: string) => {\n    if (what === 'loaded page') {\n      sent += 1\n      const percent = Math.round((100 * sent) / (hex.length / opt.pageSize))\n      progress(percent)\n    }\n  }\n\n  await async.series([\n    // send two dummy syncs like avrdude does\n    stk500.sync.bind(stk500, stream, 3, opt.timeout),\n    stk500.sync.bind(stk500, stream, 3, opt.timeout),\n    stk500.sync.bind(stk500, stream, 3, opt.timeout),\n    stk500.verifySignature.bind(stk500, stream, opt.signature, opt.timeout),\n    stk500.setOptions.bind(stk500, stream, {}, opt.timeout),\n    stk500.enterProgrammingMode.bind(stk500, stream, opt.timeout),\n    stk500.upload.bind(stk500, stream, hex, opt.pageSize, opt.timeout),\n    // stk500.verify.bind(stk500, stream, hex, opt.pageSize, opt.timeout),\n    stk500.exitProgrammingMode.bind(stk500, stream, opt.timeout)\n  ])\n}\n\nconst serialOptions = {\n  baudRate: 57600,\n  bufferSize: 20000\n}\nconst board = {\n  signature: Buffer.from([0x1e, 0x95, 0x0f]),\n  pageSize: 128,\n  timeout: 400\n}\nfunction Uploader() {\n  const [percent, setPercent] = useState(0)\n  const [status, setStatus] = useState<'active' | 'fail' | 'success'>('active')\n  const [isProgressHidden, setIsProgressHidden] = useState(true)\n  const [message, setMessage] = useState('')\n  const onClick = async () => {\n    setMessage('Uploading...')\n    try {\n      setIsProgressHidden(true)\n      const hex = await fetch(process.env.PUBLIC_URL + '/src.ino.hex')\n        .then((response) => response.text())\n        .then((text) => intel_hex.parse(text).data)\n      const serialStream = await serial2.connect(serialOptions)\n      setStatus('active')\n      setPercent(0)\n      setIsProgressHidden(false)\n      await bootload(serialStream, hex, board, setPercent)\n      setStatus('success')\n      setMessage(`Uploaded ${hex.length} bytes.`)\n    } catch (e) {\n      console.error(e)\n      setMessage(e.toString())\n      setStatus('fail')\n    }\n    serial2.close()\n  }\n  return (\n    <>\n      <br />\n      <Button color=\"green\" onClick={onClick}>\n        <Icon icon=\"upload2\" /> Upload lgt328p Firmware\n      </Button>\n      {!isProgressHidden && (\n        <>\n          <Progress.Line percent={percent} status={status} />\n          {message}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Uploader\n","import { voltageRanges } from './bindings'\n\ntype Data = {\n  data: number[]\n  i: number\n}\n\nfunction pull(data: Data, count: number) {\n  const result = data.data.slice(data.i, data.i + count)\n  data.i += count\n  return Array.from(result)\n}\n\nfunction get_uint8_t(data: Data) {\n  const res = data.data[data.i]\n  data.i++\n  return res\n}\nconst get_bool = get_uint8_t\n\nfunction get_uint16_t(data: Data) {\n  const l = data.data[data.i]\n  data.i++\n  const h = data.data[data.i]\n  data.i++\n  return (h << 8) | l\n}\nfunction get_float32_t(data: Data) {\n  // IEEE 754\n  // https://gist.github.com/Jozo132/2c0fae763f5dc6635a6714bb741d152f#file-float32encoding-js-L32-L43\n  const arr = data.data.slice(data.i, data.i + 4)\n  data.i += 4\n\n  const int = arr.reverse().reduce((acc, curr) => (acc << 8) + curr)\n  if (int === 0) return 0\n  const sign = int >>> 31 ? -1 : 1\n  let exp = ((int >>> 23) & 0xff) - 127\n  const mantissa = ((int & 0x7fffff) + 0x800000).toString(2)\n  let float32 = 0\n  for (let i = 0; i < mantissa.length; i += 1) {\n    float32 += parseInt(mantissa[i]) ? Math.pow(2, exp) : 0\n    exp--\n  }\n  return float32 * sign\n}\n// function get_int16_t(buffer: number[]) {\n//   const raw = get_uint16_t(buffer)\n//   if (raw & (1 << 15)) {\n//     // negative\n//     return -(~raw + (1 << 16) + 1)\n//   }\n//   return raw\n// }\nexport default function parseSerial(data: number[]) {\n  const myData: Data = {\n    data,\n    i: 0\n  }\n  // input\n  const triggerVoltage = get_uint8_t(myData)\n  const triggerDir = get_uint8_t(myData)\n  const secPerSample = get_float32_t(myData)\n  const triggerPos = get_uint16_t(myData)\n  const amplifier = get_uint8_t(myData)\n  const triggerMode = get_uint8_t(myData)\n  const triggerChannel = get_uint8_t(myData)\n  const isChannelOn = get_uint8_t(myData)\n  // input output\n  // output\n  const needData = get_bool(myData)\n  const forceUIUpdate = get_bool(myData)\n  const didTrigger = get_bool(myData)\n  const freeMemory = get_uint16_t(myData)\n  const sentSamples = get_uint16_t(myData)\n  const samplesPerBuffer = get_uint16_t(myData)\n  const analogs = [\n    isChannelOn & 0b1 ? pull(myData, sentSamples) : [],\n    isChannelOn & 0b10 ? pull(myData, sentSamples) : []\n  ]\n  const digitalBytes = isChannelOn & 0b11111100 ? pull(myData, sentSamples) : []\n  const digitals = [0b000100, 0b001000, 0b010000, 0b100000].map((mask) => {\n    if (isChannelOn & mask) {\n      return digitalBytes.map((byte) => byte & mask && 1)\n    }\n    return []\n  })\n  const vMax = voltageRanges[amplifier]\n  const buffers = [\n    ...analogs.map((analog) => analog.map((n) => (n / 256) * vMax)),\n    ...digitals.map((digital, i) =>\n      digital.map((bit) => (bit * vMax) / 8 + ((i + 0.25) * vMax) / 4)\n    )\n  ].map((channel) => channel.map((v, i) => ({ v, t: (i + 1) * secPerSample })))\n\n  return {\n    //input\n    triggerVoltage,\n    triggerDir,\n    secPerSample,\n    triggerPos,\n    amplifier,\n    triggerMode,\n    triggerChannel,\n    isChannelOn,\n    // output\n    needData,\n    forceUIUpdate,\n    didTrigger,\n    freeMemory,\n    samplesPerBuffer,\n    buffers\n  }\n}\n","// based in wonky  https://github.com/yaakov-h/uniden-web-controller/blob/master/serial.js\n\nexport type Port = {\n  readable: ReadableStream\n  writable: WritableStream\n  open: (options: SerialOptions) => Promise<void>\n  close: () => Promise<void>\n}\nexport type NavigatorSerial = {\n  requestPort: (optn: unknown) => Port\n  getPorts: () => Promise<Port[]>\n}\nexport type SerialOptions = {\n  baudRate?: number\n  dataBits?: number\n  stopBits?: number\n  parity?: string\n  bufferSize?: number\n  rtscts?: boolean\n  xon?: boolean\n  xoff?: boolean\n  xany?: boolean\n}\ndeclare global {\n  interface Window {\n    serial: Serial\n  }\n  interface Navigator {\n    serial: NavigatorSerial\n  }\n}\nconst END_SEQUENCE = [0, 1, 255, 253]\nconst indexesOfSequence = (needle: number[], haystack: number[]) => {\n  const strNeedle = needle.map((c) => String.fromCharCode(c)).join('')\n  const strHaystack = haystack.map((c) => String.fromCharCode(c)).join('')\n  const start = strHaystack.indexOf(strNeedle)\n  const end = strHaystack.indexOf(strNeedle, start + strNeedle.length)\n  return [start, end]\n}\n\nconst sleep = (ms: number) => new Promise((r) => setTimeout(r, ms))\n\nexport class Serial {\n  reader?: ReadableStreamDefaultReader\n  writer?: WritableStreamDefaultWriter\n  port?: Port\n  readbuffer: number[] = []\n  outputDone?: Promise<void>\n  async close() {\n    console.log('closing')\n    if (this.reader) {\n      const reader = this.reader\n      this.reader = undefined\n      await reader.cancel()\n    }\n    if (this.writer) {\n      const writer = this.writer\n      this.writer = undefined\n      await writer.close()\n    }\n    if (this.outputDone) {\n      const outputDone = this.outputDone\n      this.outputDone = undefined\n      await outputDone\n    }\n    if (this.port) {\n      const port = this.port\n      this.port = undefined\n      await port.close()\n    }\n    console.log('closed')\n  }\n  async connectWithPaired(options: SerialOptions) {\n    const ports = await navigator.serial.getPorts()\n    console.log(ports)\n    if (!ports.length) throw new Error('no paired')\n    this._connect(options, ports[0])\n  }\n  async connect(options: SerialOptions) {\n    const port = await navigator.serial.requestPort({})\n    this._connect(options, port)\n  }\n  async _connect(options: SerialOptions, port: Port) {\n    options = {\n      baudRate: 9600,\n      dataBits: 8,\n      stopBits: 1,\n      parity: 'none',\n      bufferSize: 255,\n      rtscts: false,\n      xon: false,\n      xoff: false,\n      ...options\n    }\n\n    const chackOptionsForAndroidCompat = options as any\n    chackOptionsForAndroidCompat.baudrate = options.baudRate\n    chackOptionsForAndroidCompat.databits = options.dataBits\n    chackOptionsForAndroidCompat.stopbits = options.stopBits\n    chackOptionsForAndroidCompat.buffersize = options.bufferSize\n    if (this.port) await this.close()\n    this.port = port\n    await this.port.open(options)\n    this.readbuffer = []\n    this.reader = this.port.readable.getReader()\n    // this.writer = this.port.writable.getWriter() // binary\n    const encoder = new TextEncoderStream()\n    this.outputDone = encoder.readable.pipeTo(this.port.writable)\n    const textOutputStream = encoder.writable\n    this.writer = textOutputStream.getWriter()\n  }\n\n  write = async (text: string) => {\n    if (!this.writer) return\n    await this.writer.write(text)\n  }\n  onData(callback: (data: number[]) => unknown) {\n    const consume = () => {\n      let busy = true\n      while (busy) {\n        const [start, end] = indexesOfSequence(END_SEQUENCE, this.readbuffer)\n        if (start > -1 && end > -1) {\n          const dataFrame = this.readbuffer.slice(\n            start + END_SEQUENCE.length,\n            end\n          )\n          this.readbuffer = this.readbuffer.slice(end)\n          const checksumShould = (dataFrame.pop()! << 8) + dataFrame.pop()!\n          const checksumIs =\n            dataFrame.reduce((prev, curr) => prev + curr, 0) % Math.pow(2, 16)\n          if (checksumShould === checksumIs) {\n            callback(dataFrame)\n          } else {\n            console.error(`Checksum error: ${checksumIs}≠${checksumShould}`)\n            // callback(dataFrame)\n          }\n        } else {\n          busy = false\n        }\n      }\n    }\n    let running = true\n    const produce = async () => {\n      while (running) {\n        await sleep(16)\n        if (!this.reader) continue\n        const { value } = await this.reader.read()\n        if (value !== undefined) {\n          this.readbuffer.push(...value)\n          consume()\n        }\n      }\n    }\n\n    produce()\n    // consume()\n    return () => {\n      running = false\n    }\n  }\n}\nconst serial = new Serial()\n\nexport default serial\n\nwindow.serial = serial\nwindow.addEventListener('beforeunload', () => serial.close())\n","import { atom, selector, DefaultValue, RecoilState, RecoilValue } from 'recoil'\nimport serial from './Serial'\n\nexport function memoSelector<T>(theAtom: RecoilState<T>) {\n  return selector<T>({\n    key: 'memo' + theAtom.key,\n    get: ({ get }) => get(theAtom),\n    set: ({ set, get }, newValue) => {\n      const old = get(theAtom)\n      if (old !== newValue) {\n        set(theAtom, newValue)\n      }\n    }\n  })\n}\ntype GetRecoilValue = <T>(recoilVal: RecoilValue<T>) => T\nexport function makeIntercom<T>({\n  key,\n  ui2mcu,\n  mcu2ui,\n  default: defaultValue\n}: {\n  key: string\n  ui2mcu: (v: T, get: GetRecoilValue | null) => number\n  mcu2ui: (v: number, get: GetRecoilValue | null) => T\n  default: T\n}) {\n  const remoteState = memoSelector(\n    atom<number>({\n      key,\n      default: ui2mcu(defaultValue, null)\n    })\n  )\n\n  // throttle to avoid filling the MCU serial buffer\n  const serial_write = serial.write\n  // const serial_write = throttle(serial.write, 40, {\n  //   leading: false,\n  //   trailing: true\n  // })\n  const send = selector<T>({\n    key: key + '-selector',\n    get: ({ get }) => mcu2ui(get(remoteState), get),\n    set: ({ set, get, reset }, newValue) => {\n      if (newValue instanceof DefaultValue) return reset(remoteState)\n      set(remoteState, ui2mcu(newValue, get))\n      serial_write(key + ui2mcu(newValue, get) + '>')\n    }\n  })\n  const receive = selector<number>({\n    key: key + '-receive-selector',\n    get: () => {\n      throw new Error('cant get here')\n    },\n    set: ({ set }, newValue) => {\n      if (newValue instanceof DefaultValue) throw new Error('no reset allowed')\n      set(remoteState, newValue)\n    }\n  })\n\n  return { send, receive }\n}\n","import ft from 'fourier-transform'\nimport { PlotDatum } from '../communication/bindings'\n\nconst average = (arr: number[]) =>\n  arr.reduce((acc, n) => acc + n, 0) / arr.length\nexport function getFFT(data: PlotDatum[]) {\n  let signal = data.map(({ v }) => v)\n  if (signal.length === 0) return []\n  if (signal.length < 2) {\n    console.log('fix me')\n    return []\n  }\n  const length = data.length\n  const dt = data[length - 1].t - data[length - 2].t\n\n  const mid = average(signal)\n  signal = signal.map((v) => v - mid)\n  // const nextPowerOf2 = Math.ceil(Math.log2(signal.length))\n  const nextPowerOf2 = Math.ceil(Math.log2(512))\n  const padding = Math.pow(2, nextPowerOf2) - signal.length\n  let paddedSignal = signal\n  if (padding > 0) {\n    paddedSignal = [...signal, ...Array(padding).fill(0)]\n  }\n  if (padding < 0) {\n    paddedSignal = signal.slice(0, 512)\n  }\n  const fft = ft(paddedSignal)\n  // https://www.dsprelated.com/showthread/comp.dsp/87526-1.php\n  const normalized = fft.map((v) => (512 * v) / signal.length)\n  // const normalized = fft.map((v) => v * 2)\n  return normalized.map((v, i) => ({ v, t: dt * i }))\n}\n\nexport function rollingAverage(signal: number[]) {\n  // exponential averaging is used to remove wrong frequency readings due to noise\n  let last = signal[0]\n  return signal.map((n) => {\n    last = last * 0.5 + n * 0.5\n    return last\n  })\n}\nexport function getFrequencyCount(data: PlotDatum[]) {\n  if (data.length < 2) return 0\n  const signal = rollingAverage(data.map(({ v }) => v))\n  const max = Math.max(...signal)\n  const min = Math.min(...signal)\n  const mid = (max + min) / 2\n  let firstCross = -1\n  let lastCross = 0\n  let count = 0\n  for (let i = 1; i < data.length; i++) {\n    const risingCross = data[i - 1].v < mid && data[i].v >= mid\n    if (risingCross) {\n      count++\n      if (firstCross < 0) firstCross = data[i].t\n      lastCross = data[i].t\n    }\n  }\n  return (count - 1) / (lastCross - firstCross)\n}\n\nexport function oversample(\n  factor: number,\n  newBuffer: PlotDatum[],\n  oldBuffer: PlotDatum[]\n) {\n  return newBuffer.map(({ v, t }, j) => ({\n    t,\n    v: (oldBuffer[j]?.v || 0) * factor + v * (1 - factor)\n  }))\n}\n","export default window as any\n","import { atom, selector, DefaultValue } from 'recoil'\nimport parseSerial from './parseSerial'\nimport { makeIntercom, memoSelector } from './bindingsHelper'\nimport { getFFT, getFrequencyCount, oversample } from '../dsp/spectrum'\nimport win from '../win'\n\nexport const useTriggerVoltage = makeIntercom<number>({\n  key: 'V',\n  ui2mcu: (v, get) => {\n    const [vmin, , vpp] = get ? get(voltageRangeState) : [0, 5, 5]\n    return Math.ceil(((v + vmin) / vpp) * 255)\n  },\n  mcu2ui: (n, get) => {\n    const [vmin, , vpp] = get ? get(voltageRangeState) : [0, 5, 5]\n    return (n / 255) * vpp + vmin\n  },\n  default: 1\n})\n\nexport const use50percentTriggerVoltage = selector({\n  key: '50% trigger voltage',\n  get: () => false,\n  set: ({ set, get }) => {\n    const { vavr } = get(voltagesState)\n    set(useTriggerVoltage.send, vavr)\n  }\n})\n\nexport const useTriggerPos = makeIntercom<number>({\n  key: 'P',\n  ui2mcu: (v, get) => {\n    const samples = get ? get(useSamplesPerBuffer.send) : 512\n    const result = v * samples\n    if (result < 0) return 0\n    if (result > samples - 1) return samples - 1\n    return result\n  },\n  mcu2ui: (v, get) => {\n    const samples = get ? get(useSamplesPerBuffer.send) : 512\n    return v / samples\n  },\n  default: 0.5\n})\nexport const useSecPerSample = makeIntercom<number>({\n  key: 'C',\n  ui2mcu: (v) => v,\n  mcu2ui: (v) => v,\n  default: 0.00000275\n})\nexport const requestData = makeIntercom<number>({\n  key: 'R',\n  ui2mcu: (v) => v,\n  mcu2ui: (v) => v,\n  default: 0\n})\nexport enum TriggerDirection {\n  FALLING = 'Falling',\n  RISING = 'Rising'\n}\nexport const useTriggerDirection = makeIntercom<TriggerDirection>({\n  key: 'D',\n  ui2mcu: (v) => (v === TriggerDirection.RISING ? 0 : 1),\n  mcu2ui: (v) => (v ? TriggerDirection.FALLING : TriggerDirection.RISING),\n  default: TriggerDirection.FALLING\n})\nexport const useTriggerChannel = makeIntercom<number>({\n  key: 'T',\n  ui2mcu: (v) => v,\n  mcu2ui: (v) => v,\n  default: 0\n})\nexport const useIsChannelOn = makeIntercom<boolean[]>({\n  key: 'B',\n  ui2mcu: (v) => {\n    const result = v\n      .map((b) => (b ? 1 : 0) as number)\n      .reduce((acc, n, i) => acc + (n << i), 0)\n    return result\n  },\n  mcu2ui: (v) => {\n    const result = Array(8)\n      .fill(0)\n      .map((_, i) => Boolean(v & (1 << i)))\n    return result\n  },\n  default: [true, false, false, false, false, false]\n})\n\nexport const constrain = (v: number, min: number, max: number) =>\n  v < min ? min : v > max ? max : v\nexport const voltageRanges = [\n  25,\n  6.25,\n  5,\n  3.125,\n  1.5625,\n  0.78125,\n  0.78125,\n  0.625,\n  0.390625,\n  0.3125,\n  0.1953125,\n  0.15625\n]\nexport const useAmplifier = makeIntercom<number>({\n  key: 'A',\n  ui2mcu: (v) => constrain(v, 0, voltageRanges.length - 1),\n  mcu2ui: (v) => v,\n  default: 1 //TODO: use volt range or per division\n})\nexport const useSamplesPerBuffer = makeIntercom<number>({\n  key: 'S',\n  ui2mcu: (v) => v,\n  mcu2ui: (v) => v,\n  default: 512 // TODO: this shouldn't be a setter\n})\nexport enum TriggerMode {\n  AUTO = 'Auto',\n  NORMAL = 'Normal',\n  SINGLE = 'Single',\n  SLOW = 'Slow'\n}\n\nexport const useTriggerMode = makeIntercom<TriggerMode>({\n  key: 'M',\n  ui2mcu: (v) => Object.values(TriggerMode).indexOf(v),\n  mcu2ui: (v) => Object.values(TriggerMode)[v],\n  default: TriggerMode.AUTO\n})\n\nexport type PlotDatum = { t: number; v: number }\nexport const dataState = atom({\n  key: 'data',\n  default: [...new Array(8)].map(() => [] as PlotDatum[])\n})\n\nexport const isRunningState = memoSelector(\n  atom({\n    key: 'is-running',\n    default: true\n  })\n)\nexport const oversamplingFactorState = memoSelector(\n  atom({\n    key: 'oversampling-factor',\n    default: 0\n  })\n)\nexport const XYModeState = atom({\n  key: 'xy-mode',\n  default: false\n})\nexport const fftState0 = atom({\n  key: 'fft0',\n  default: false\n})\nexport const fftState1 = atom({\n  key: 'fft1',\n  default: false\n})\n\nexport const didTriggerState = memoSelector(\n  atom({\n    key: 'did-trigger',\n    default: false\n  })\n)\nexport const freeMemoryState = memoSelector(\n  atom({\n    key: 'free-memory',\n    default: 0\n  })\n)\nexport const frequencyState = selector({\n  key: 'frequency',\n  get: ({ get }) => getFrequencyCount(get(dataState)[0])\n})\n\nconst sum = (signal: number[]) =>\n  signal.reduce((previous, current) => previous + current, 0)\nexport const voltagesState = selector({\n  key: 'voltages',\n  get: ({ get }) => {\n    const signal = get(dataState)[0].map(({ v }) => v)\n    const vmax = Math.max(...signal)\n    const vmin = Math.min(...signal)\n    const vpp = vmax - vmin\n    const vavr = sum(signal) / signal.length\n\n    return {\n      vavr,\n      vpp,\n      vmin,\n      vmax\n    }\n  }\n})\n\nexport const voltageRangeState = selector({\n  key: 'voltage-range',\n  get: ({ get }) => {\n    //https://docs.google.com/spreadsheets/d/1urWB28qDmB_LL_khdBBfB-djku5h4lSx-Cw9l7Rz1u8/edit?usp=sharing\n    // TODO: do this in another way\n    // TODO: account for the last fifth of the ADC, which is not usable\n    const vmax = voltageRanges[get(useAmplifier.send)]\n    const vmin = 0\n    return [vmin, vmax, vmax - vmin]\n  }\n})\n\nconst sendFullState = selector<null>({\n  key: 'sendFullState-this shouldnt be a selector',\n  get: () => null,\n  set: ({ get, set }) => {\n    set(useTriggerPos.send, get(useTriggerPos.send))\n    set(useSecPerSample.send, get(useSecPerSample.send))\n    set(useSamplesPerBuffer.send, get(useSamplesPerBuffer.send))\n    set(useAmplifier.send, get(useAmplifier.send))\n    set(useTriggerVoltage.send, get(useTriggerVoltage.send))\n    set(useTriggerDirection.send, get(useTriggerDirection.send))\n    set(useTriggerChannel.send, get(useTriggerChannel.send))\n    set(useTriggerMode.send, get(useTriggerMode.send))\n    set(useIsChannelOn.send, get(useIsChannelOn.send))\n  }\n})\n\ntype Data = ReturnType<typeof parseSerial>\nconst receiveFullState = selector<Data>({\n  key: 'receiveFullState-this shouldnt be a selector',\n  get: () => {\n    throw new Error('write only selector')\n  },\n  set: ({ set }, data) => {\n    if (data instanceof DefaultValue) return\n    set(useTriggerPos.receive, data.triggerPos)\n    set(useSecPerSample.receive, data.secPerSample)\n    set(useSamplesPerBuffer.receive, data.samplesPerBuffer)\n    set(useAmplifier.receive, data.amplifier)\n    set(useTriggerVoltage.receive, data.triggerVoltage)\n    set(useTriggerDirection.receive, data.triggerDir)\n    set(useTriggerChannel.receive, data.triggerChannel)\n    set(useTriggerMode.receive, data.triggerMode)\n    set(useIsChannelOn.receive, data.isChannelOn)\n  }\n})\n\nexport const allDataState = selector<number[]>({\n  key: 'all-data-this shouldnt be a selector',\n  get: () => [], // this is a write only selector\n  set: ({ set, get }, newData) => {\n    win.$recoilDebugStates = [] // TODO: fix memory leak in recoiljs beta\n    if (newData instanceof DefaultValue) return\n    if (newData.length === 0) return\n    const data = parseSerial(newData)\n    if (data.needData) set(sendFullState, null)\n    if (data.forceUIUpdate) set(receiveFullState, data)\n\n    let buffers = data.buffers\n\n    set(freeMemoryState, data.freeMemory)\n    set(didTriggerState, !!data.didTrigger)\n    const shouldUpdate =\n      // todo use isRunning state in board for this\n      get(isRunningState) && buffers.some((buffer) => buffer.length > 0)\n    if (shouldUpdate) {\n      const oldBuffers = get(dataState)\n\n      const oversamplingFactor = get(oversamplingFactorState)\n      if (oversamplingFactor > 0) {\n        const factor = 1 - 2 / (oversamplingFactor + 1)\n        buffers = buffers.map((b, i) =>\n          oversample(factor, buffers[i], oldBuffers[i])\n        )\n      }\n\n      if (get(useTriggerMode.send) === TriggerMode.SLOW) {\n        const oldLastT = Math.max(\n          ...oldBuffers.map((b) => b[b.length - 1]?.t || 0)\n        )\n\n        buffers = buffers.map((b, i) => [\n          ...oldBuffers[i],\n          ...b.map(({ v, t }) => ({ v, t: t + oldLastT }))\n        ])\n        const totalSecs =\n          get(useSecPerSample.send) * get(useSamplesPerBuffer.send)\n        const lastT = Math.max(...buffers.map((b) => b[b.length - 1]?.t || 0))\n        if (lastT > totalSecs) {\n          buffers = buffers.map(() => [])\n        }\n      }\n      const withFFT = [\n        ...buffers,\n        get(fftState0) ? getFFT(buffers[0]) : [],\n        get(fftState1) ? getFFT(buffers[1]) : []\n      ]\n\n      set(dataState, withFFT)\n      if (get(useTriggerMode.send) === TriggerMode.SINGLE) {\n        set(isRunningState, false)\n      }\n    }\n  }\n})\n","import * as d3 from 'd3'\n\nimport {\n  useSecPerSample,\n  dataState,\n  useSamplesPerBuffer,\n  voltageRangeState\n} from '../../communication/bindings'\nimport { selector, atom } from 'recoil'\nimport { memoSelector } from '../../communication/bindingsHelper'\nexport const margin = { top: 20, right: 50, bottom: 30, left: 50 }\n\nexport const xDomainSelector = selector({\n  key: 'xDomain',\n  get: ({ get }) => {\n    const xMax = get(useSecPerSample.send) * get(useSamplesPerBuffer.send)\n    return [0, xMax] as [number, number]\n  }\n})\nexport const yDomainSelector = voltageRangeState\n\nexport const plotWidthSelector = memoSelector(\n  atom({\n    key: 'plot-width',\n    default: 0\n  })\n)\nexport const plotHeightSelector = memoSelector(\n  atom({\n    key: 'plot-height',\n    default: 0\n  })\n)\nexport const xScaleSelector = selector({\n  key: 'xScale',\n  get: ({ get }) => {\n    const xDomain = get(xDomainSelector)\n    const width = get(plotWidthSelector)\n    return d3\n      .scaleLinear()\n      .domain(xDomain)\n      .range([margin.left, width - margin.right])\n  }\n})\nexport const yScaleSelector = selector({\n  key: 'yScale',\n  get: ({ get }) => {\n    const yDomain = get(yDomainSelector)\n    const height = get(plotHeightSelector)\n    return d3\n      .scaleLinear()\n      .domain(yDomain)\n      .rangeRound([height - margin.bottom, margin.top])\n  }\n})\nexport const lineSelector = selector({\n  key: 'line',\n  get: ({ get }) => {\n    const xScale = get(xScaleSelector)\n    const yScale = get(yScaleSelector)\n\n    return d3\n      .line<{ v: number; t: number }>()\n      .x(({ t }) => xScale(t)!)\n      .y(({ v }) => yScale(v)!)\n  }\n})\nexport const XYLineSelector = selector({\n  key: 'xy-line',\n  get: ({ get }) => {\n    const yScale = get(yScaleSelector)\n    const xScale = get(xScaleSelector)\n    const [, xMax] = get(xDomainSelector)\n    const [, yMax] = get(yDomainSelector)\n\n    return d3\n      .line<[number, number]>()\n      .x((d) => xScale((d[1] / yMax) * xMax)!)\n      .y((d) => yScale(-d[0])!)\n  }\n})\nexport const plotDataSelector = selector({\n  key: 'plot-data',\n  get: ({ get }) => {\n    const data = get(dataState)\n    const line = get(lineSelector)\n    return data.map((data) => line(data) || undefined)\n  }\n})\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  useImperativeHandle,\n  useState\n} from 'react'\n\nimport { useTriggerVoltage } from '../../communication/bindings'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { margin, plotWidthSelector, yScaleSelector } from './hooks'\n\nexport type TriggerVoltageRef = {\n  onMouseUp: MouseEventHandler\n  onMouseMove: MouseEventHandler\n}\n\nconst TriggerVoltageHandle = forwardRef<TriggerVoltageRef>((_props, ref) => {\n  const [draggingTV, setDraggingTV] = useState(false)\n  const yScale = useRecoilValue(yScaleSelector)\n  const width = useRecoilValue(plotWidthSelector)\n  const [triggerVoltage, setTriggerVoltage] = useRecoilState(\n    useTriggerVoltage.send\n  )\n  useImperativeHandle(ref, () => ({\n    onMouseUp() {\n      setDraggingTV(false)\n    },\n    onMouseMove(e) {\n      if (draggingTV) {\n        setTriggerVoltage(yScale.invert(e.nativeEvent.offsetY))\n      }\n    }\n  }))\n  const scaledY = yScale(triggerVoltage)\n  return (\n    <>\n      <line\n        className=\"triggerVoltage\"\n        x1={margin.left}\n        x2={width - margin.right}\n        y1={scaledY}\n        y2={scaledY}\n      ></line>\n      <line\n        className=\"triggerVoltageHandle\"\n        onMouseDown={(e) => {\n          e.preventDefault()\n          e.stopPropagation()\n          setDraggingTV(true)\n        }}\n        x1={margin.left}\n        x2={width - margin.right}\n        y1={scaledY}\n        y2={scaledY}\n      ></line>\n      <text\n        fill=\"currentColor\"\n        y={scaledY}\n        x={width - margin.right}\n        dy=\".32em\"\n        dx=\"10\"\n      >\n        {triggerVoltage.toFixed(2)}v\n      </text>\n    </>\n  )\n})\n\nTriggerVoltageHandle.displayName = 'TriggerVoltageHandle'\n\nexport default TriggerVoltageHandle\n","import React, {\n  forwardRef,\n  MouseEventHandler,\n  useImperativeHandle,\n  useState\n} from 'react'\n\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { useTriggerPos } from '../../communication/bindings'\nimport {\n  margin,\n  plotHeightSelector,\n  xDomainSelector,\n  xScaleSelector\n} from './hooks'\n\nexport type TriggerPosRef = {\n  onMouseUp: MouseEventHandler\n  onMouseMove: MouseEventHandler\n}\n\nconst TriggerPosHandle = forwardRef<TriggerPosRef>((_props, ref) => {\n  const [draggingTP, setDraggingTP] = useState(false)\n  const xScale = useRecoilValue(xScaleSelector)\n  const height = useRecoilValue(plotHeightSelector)\n  const [triggerPos, setTriggerPos] = useRecoilState(useTriggerPos.send)\n\n  const xDomain = useRecoilValue(xDomainSelector)\n  useImperativeHandle(ref, () => ({\n    onMouseUp() {\n      setDraggingTP(false)\n    },\n    onMouseMove(e) {\n      if (draggingTP) {\n        setTriggerPos(xScale.invert(e.nativeEvent.offsetX) / xDomain[1])\n      }\n    }\n  }))\n  const scaledX = xScale(triggerPos * xDomain[1])\n\n  return (\n    <>\n      <line\n        className=\"triggerPos\"\n        x1={scaledX}\n        x2={scaledX}\n        y1={height - margin.bottom}\n        y2={margin.top}\n      ></line>\n      <line\n        className=\"triggerPosHandle\"\n        onMouseDown={(e) => {\n          e.preventDefault()\n          e.stopPropagation()\n          setDraggingTP(true)\n        }}\n        x1={scaledX}\n        x2={scaledX}\n        y1={height - margin.bottom}\n        y2={margin.top}\n      ></line>\n      <text fill=\"currentColor\" x={scaledX} dx=\"-1em\" dy=\"1em\">\n        {Math.round(triggerPos * 100)}%\n      </text>\n    </>\n  )\n})\n\nTriggerPosHandle.displayName = 'TriggerPosHandle'\nexport default TriggerPosHandle\n","const toFixed = (float: number, digits = 0) => {\n  const padding = Math.pow(10, digits)\n  return (Math.round(float * padding) / padding).toFixed(digits)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype ohNoItIsAny = any\n\nexport function formatTime(s: ohNoItIsAny) {\n  s = Number(s)\n  if (Number.isNaN(s)) return '--'\n\n  const m = s / 60\n  const h = s / 60 / 60\n  const ms = s * 1000\n  const us = ms * 1000\n  if (us < 1000) return toFixed(us, 0) + 'μs'\n  if (ms < 10) return toFixed(ms, 2) + 'ms'\n  if (ms < 1000) return toFixed(ms) + 'ms'\n  if (s < 10) return toFixed(s, 1) + 's'\n  if (h > 1) return toFixed(h, 0) + 'h' + toFixed(m % 60, 1) + 'm'\n  if (m > 5) return toFixed(m, 0) + 'm' + toFixed(s % 60, 1) + 's'\n  return toFixed(s, 0) + 's'\n}\n\nexport function formatFreq(hz: number) {\n  if (hz > 0) {\n    const khz = hz / 1000\n    if (hz < 1000) return toFixed(hz) + 'Hz'\n    if (khz < 10) return toFixed(khz, 2) + 'KHz'\n    return toFixed(khz) + 'KHz'\n  }\n  return '--'\n}\nexport function formatVoltage(v: number): string {\n  if (v < 0) return '-' + formatVoltage(-v)\n  const mv = v * 1000\n  const uv = mv * 1000\n  if (uv < 10) return toFixed(uv, 2) + 'µv'\n  if (uv < 50) return toFixed(uv, 1) + 'µv'\n  if (uv < 1000) return toFixed(uv, 0) + 'µv'\n  if (mv < 10) return toFixed(mv, 2) + 'mv'\n  if (mv < 50) return toFixed(mv, 1) + 'mv'\n  if (mv < 1000) return toFixed(mv, 0) + 'mv'\n  return toFixed(v, 2) + 'v'\n}\n","import * as d3 from 'd3'\nimport React, { useRef, useLayoutEffect } from 'react'\n\nimport { useRecoilValue } from 'recoil'\nimport { margin, plotHeightSelector, xScaleSelector } from './hooks'\nimport { formatTime } from '../formatters'\n\nexport default function XAxis() {\n  const nodeRef = useRef<SVGSVGElement>(null)\n  const height = useRecoilValue(plotHeightSelector)\n  const xScale = useRecoilValue(xScaleSelector)\n  const gEl = nodeRef.current\n  useLayoutEffect(() => {\n    if (!gEl) return\n    const xTicks = d3.ticks(xScale.domain()[0], xScale.domain()[1], 10)\n    d3.select(gEl).call((g) =>\n      g\n        .attr('transform', `translate(0,${height - margin.bottom})`)\n        .call(\n          d3\n            .axisBottom(xScale)\n            .tickValues(xTicks)\n            .tickPadding(10)\n            .tickSize(-height + margin.top + margin.bottom)\n            .tickFormat(formatTime)\n            .tickSizeOuter(0)\n        )\n        .call((g) => g.select('.domain').remove())\n    )\n  }, [gEl, xScale, height])\n\n  return <g className=\"x axis\" ref={nodeRef} />\n}\n","import * as d3 from 'd3'\nimport React, { useRef, useLayoutEffect } from 'react'\n\nimport { useRecoilValue } from 'recoil'\nimport { margin, plotWidthSelector, yScaleSelector } from './hooks'\n\nexport default function YAxis() {\n  const nodeRef = useRef<SVGSVGElement>(null)\n  const width = useRecoilValue(plotWidthSelector)\n  const yScale = useRecoilValue(yScaleSelector)\n  const gEl = nodeRef.current\n\n  useLayoutEffect(() => {\n    if (!gEl) return\n    const yTicks = d3.ticks(yScale.domain()[0], yScale.domain()[1], 10)\n    d3.select(gEl)\n      .call((g) =>\n        g.attr('transform', `translate(${margin.left},0)`).call(\n          d3\n            .axisLeft(yScale)\n            .tickValues(yTicks)\n            .tickPadding(10)\n            .tickSize(-width + margin.right + margin.left - 1)\n            .tickFormat((v) => v + 'v')\n        )\n      )\n      .call((g) =>\n        g.select('.domain').attr(\n          'd',\n          (_d, _, path) =>\n            // close path so the domain has a right border\n            d3.select(path[0]).attr('d') + 'z'\n        )\n      )\n  }, [gEl, yScale, width])\n\n  return <g className=\"y axis\" ref={nodeRef} />\n}\n","import { isEqual } from 'lodash'\nimport React, {\n  forwardRef,\n  MouseEventHandler,\n  useImperativeHandle,\n  useState\n} from 'react'\n\nimport { useRecoilValue } from 'recoil'\nimport { formatTime, formatVoltage } from '../formatters'\nimport { xScaleSelector, yScaleSelector } from './hooks'\n\nexport type MeasureRef = {\n  onMouseDown: MouseEventHandler\n  onMouseUp: MouseEventHandler\n  onMouseMove: MouseEventHandler\n}\n\nconst Measure = forwardRef<MeasureRef>((_props, ref) => {\n  const [dragging, setDragging] = useState(false)\n  const xScale = useRecoilValue(xScaleSelector)\n  const yScale = useRecoilValue(yScaleSelector)\n  const [startPos, setStartPos] = useState({ x: -1, y: -1 })\n  const [endPos, setEndPos] = useState({ x: -1, y: -1 })\n  useImperativeHandle(ref, () => ({\n    onMouseDown(e) {\n      setStartPos({\n        x: xScale.invert(e.nativeEvent.offsetX),\n        y: yScale.invert(e.nativeEvent.offsetY)\n      })\n      setEndPos({\n        x: xScale.invert(e.nativeEvent.offsetX),\n        y: yScale.invert(e.nativeEvent.offsetY)\n      })\n      setDragging(true)\n    },\n    onMouseUp(e) {\n      if (dragging) {\n        setEndPos({\n          x: xScale.invert(e.nativeEvent.offsetX),\n          y: yScale.invert(e.nativeEvent.offsetY)\n        })\n        setDragging(false)\n      }\n    },\n    onMouseMove(e) {\n      if (dragging) {\n        setEndPos({\n          x: xScale.invert(e.nativeEvent.offsetX),\n          y: yScale.invert(e.nativeEvent.offsetY)\n        })\n      }\n    }\n  }))\n  if (isEqual(startPos, endPos)) return <></>\n  return (\n    <g className=\"Measure\">\n      <line\n        className=\"measureCap\"\n        x1={xScale(startPos.x)! - 5}\n        x2={xScale(startPos.x)! + 5}\n        y1={yScale(startPos.y)! - 5}\n        y2={yScale(startPos.y)! + 5}\n      ></line>\n      <line\n        className=\"measureCap\"\n        x1={xScale(startPos.x)! - 5}\n        x2={xScale(startPos.x)! + 5}\n        y1={yScale(startPos.y)! + 5}\n        y2={yScale(startPos.y)! - 5}\n      ></line>\n      <line\n        className=\"measureX\"\n        x1={xScale(startPos.x)}\n        x2={xScale(endPos.x)}\n        y1={yScale(startPos.y)}\n        y2={yScale(startPos.y)}\n      ></line>\n      <text\n        fill=\"currentColor\"\n        x={xScale((startPos.x + endPos.x) / 2)}\n        y={yScale(startPos.y)}\n        dx=\"-1em\"\n        dy=\"1.5em\"\n      >\n        {formatTime(endPos.x - startPos.x)}\n      </text>\n      <line\n        className=\"measureCap\"\n        x1={xScale(endPos.x)! - 5}\n        x2={xScale(endPos.x)! + 5}\n        y1={yScale(endPos.y)! - 5}\n        y2={yScale(endPos.y)! + 5}\n      ></line>\n      <line\n        className=\"measureCap\"\n        x1={xScale(endPos.x)! - 5}\n        x2={xScale(endPos.x)! + 5}\n        y1={yScale(endPos.y)! + 5}\n        y2={yScale(endPos.y)! - 5}\n      ></line>\n      <line\n        className=\"measureY\"\n        x1={xScale(endPos.x)}\n        x2={xScale(endPos.x)}\n        y1={yScale(startPos.y)}\n        y2={yScale(endPos.y)}\n      ></line>\n      <text\n        fill=\"currentColor\"\n        x={xScale(endPos.x)}\n        y={yScale((startPos.y + endPos.y) / 2)}\n        dx=\"1em\"\n        dy=\"0\"\n      >\n        {formatVoltage(endPos.y - startPos.y)}\n      </text>\n    </g>\n  )\n})\n\nMeasure.displayName = 'Measure'\nexport default Measure\n","import React, { useEffect, useRef } from 'react'\nimport useSize from '@react-hook/size'\n\nimport {\n  dataState,\n  useIsChannelOn,\n  XYModeState\n} from '../../communication/bindings'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport TriggerVoltageHandle, { TriggerVoltageRef } from './TriggerVoltageHandle'\nimport TriggerPosHandle, { TriggerPosRef } from './TriggerPosHandle'\nimport {\n  lineSelector,\n  plotHeightSelector,\n  plotWidthSelector,\n  XYLineSelector\n} from './hooks'\nimport XAxis from './XAxis'\nimport YAxis from './YAxis'\nimport Measure, { MeasureRef } from './Measure'\n\nfunction XYCurve() {\n  const xyMode = useRecoilValue(XYModeState)\n  const isChannelOn = useRecoilValue(useIsChannelOn.send)\n\n  const xyLine = useRecoilValue(XYLineSelector)\n  const data = useRecoilValue(dataState)\n  const d = data[0].map(\n    (d, i) => [-data[1][i]?.v || 0, d.v] as [number, number]\n  )\n  if (!xyMode || !isChannelOn[0] || !isChannelOn[1]) return <></>\n  return (\n    <>\n      <path className={`plot-area-xy`} d={xyLine(d) || undefined}></path>\n    </>\n  )\n}\nfunction Curves() {\n  const line = useRecoilValue(lineSelector)\n  const data = useRecoilValue(dataState)\n  const ds = data.map((data) => line(data) || undefined)\n  const analogs = ds.slice(0, 2)\n  const digitals = ds.slice(2, 6)\n  const ffts = ds.slice(6, 8)\n  return (\n    <>\n      {analogs.map((d, i) => (\n        <path key={i} className={`plot-area-a${i}`} d={d}></path>\n      ))}\n      {digitals.map((d, i) => (\n        <path key={i} className={`plot-area-d${i}`} d={d}></path>\n      ))}\n      {ffts.map((d, i) => (\n        <path key={i} className={`plot-area-fft${i}`} d={d}></path>\n      ))}\n    </>\n  )\n}\n\nexport default function Plot() {\n  const nodeRef = useRef<SVGSVGElement>(null)\n  const triggerPosRef = useRef<TriggerPosRef>(null)\n  const triggerVoltageRef = useRef<TriggerVoltageRef>(null)\n  const measureRef = useRef<MeasureRef>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [width, height] = useSize(containerRef)\n  const setPlotHeight = useSetRecoilState(plotHeightSelector)\n  const setPlotWidth = useSetRecoilState(plotWidthSelector)\n  useEffect(() => {\n    setPlotHeight(height)\n    setPlotWidth(width)\n  }, [height, setPlotHeight, setPlotWidth, width])\n  return (\n    <div className=\"plotContainer\" ref={containerRef}>\n      <svg\n        className=\"plot\"\n        ref={nodeRef}\n        onMouseMove={(e) => {\n          triggerPosRef.current?.onMouseMove(e)\n          triggerVoltageRef.current?.onMouseMove(e)\n          measureRef.current?.onMouseMove(e)\n          e.preventDefault()\n        }}\n        onMouseLeave={(e) => {\n          triggerPosRef.current?.onMouseUp(e)\n          triggerVoltageRef.current?.onMouseUp(e)\n          measureRef.current?.onMouseUp(e)\n          e.preventDefault()\n        }}\n        onMouseUp={(e) => {\n          triggerPosRef.current?.onMouseUp(e)\n          triggerVoltageRef.current?.onMouseUp(e)\n          measureRef.current?.onMouseUp(e)\n          e.preventDefault()\n        }}\n        onMouseDown={(e) => {\n          measureRef.current?.onMouseDown(e)\n          e.preventDefault()\n        }}\n      >\n        <XAxis />\n        <YAxis />\n        <Curves />\n        <XYCurve />\n        <Measure ref={measureRef} />\n        <TriggerVoltageHandle ref={triggerVoltageRef} />\n        <TriggerPosHandle ref={triggerPosRef} />\n      </svg>\n    </div>\n  )\n}\n","import React from 'react'\nimport {\n  useTriggerDirection,\n  isRunningState,\n  useTriggerMode,\n  TriggerMode,\n  didTriggerState,\n  useTriggerChannel,\n  TriggerDirection,\n  requestData,\n  useSecPerSample\n} from '../../communication/bindings'\nimport {\n  Icon,\n  Panel,\n  Tag,\n  ButtonToolbar,\n  ButtonGroup,\n  Button,\n  IconButton\n} from 'rsuite'\nimport { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'\nimport win from '../../win'\n\nconst ButtonToolbarStyle = {\n  marginTop: 10,\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n}\n\nexport default function Trigger() {\n  const isRunning = useRecoilValue(isRunningState)\n  win.requestData = useSetRecoilState(requestData.send)\n  const [triggerMode, setTriggerMode] = useRecoilState(useTriggerMode.send)\n  const [triggerChannel, setTriggerChannel] = useRecoilState(\n    useTriggerChannel.send\n  )\n  const didTrigger = useRecoilValue(didTriggerState)\n  const [triggerDirection, setTriggerDirection] = useRecoilState(\n    useTriggerDirection.send\n  )\n  const secPerSample = useRecoilValue(useSecPerSample.send)\n  const tooFastForSlowMode = secPerSample < 0.003\n  return (\n    <Panel header=\"Trigger\" shaded collapsible defaultExpanded>\n      <ButtonToolbar style={ButtonToolbarStyle}>\n        <ButtonGroup>\n          {['A0', 'AS', 'A2', 'A3', 'A4', 'A5'].map((name, idx) => (\n            <Button\n              key={idx}\n              appearance={triggerChannel === idx ? 'primary' : 'default'}\n              disabled={\n                ['A2', 'A3'].includes(\n                  name\n                ) /* these are connected to the diff amp and generate noise */\n              }\n              size=\"sm\"\n              onClick={() => setTriggerChannel(idx)}\n            >\n              {name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ButtonToolbar>\n      <ButtonToolbar style={ButtonToolbarStyle}>\n        <ButtonGroup>\n          {Object.values(TriggerMode).map((mode) => (\n            <Button\n              key={mode}\n              appearance={triggerMode === mode ? 'primary' : 'default'}\n              color={\n                mode === TriggerMode.SLOW && tooFastForSlowMode\n                  ? 'red'\n                  : undefined\n              }\n              size=\"sm\"\n              onClick={() => setTriggerMode(mode)}\n            >\n              {mode}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ButtonToolbar>\n      <ButtonToolbar style={ButtonToolbarStyle}>\n        <div>Direction:</div>\n        <ButtonGroup>\n          <IconButton\n            size=\"sm\"\n            appearance={\n              triggerDirection === TriggerDirection.FALLING\n                ? 'primary'\n                : 'default'\n            }\n            icon={<Icon icon=\"level-down\" />}\n            onClick={() => setTriggerDirection(TriggerDirection.FALLING)}\n          />\n          <IconButton\n            size=\"sm\"\n            appearance={\n              triggerDirection === TriggerDirection.RISING\n                ? 'primary'\n                : 'default'\n            }\n            icon={<Icon icon=\"level-up\" />}\n            onClick={() => setTriggerDirection(TriggerDirection.RISING)}\n          />\n        </ButtonGroup>\n      </ButtonToolbar>\n      <ButtonToolbar style={ButtonToolbarStyle}>\n        State:&nbsp;\n        {!isRunning ? (\n          <Tag color=\"red\">Hold</Tag>\n        ) : didTrigger ? (\n          <Tag color=\"green\">Triggered</Tag>\n        ) : (\n          <Tag color=\"yellow\">Searching</Tag>\n        )}\n      </ButtonToolbar>\n    </Panel>\n  )\n}\n","import React from 'react'\nimport {\n  useIsChannelOn,\n  oversamplingFactorState,\n  fftState0,\n  fftState1,\n  XYModeState\n} from '../../communication/bindings'\nimport { Panel, ButtonToolbar, ButtonGroup, Button, Slider } from 'rsuite'\nimport { useRecoilState } from 'recoil'\n\nconst ButtonToolbarStyle = {\n  marginTop: 10,\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n}\n\nexport default function Channels() {\n  const [oversamplingFactor, setOversamplingFactor] = useRecoilState(\n    oversamplingFactorState\n  )\n  const [xyMode, setXYMode] = useRecoilState(XYModeState)\n  const [fft0, setFFT0] = useRecoilState(fftState0)\n  const [fft1, setFFT1] = useRecoilState(fftState1)\n  const [isChannelOn, setIsChannelOn] = useRecoilState(useIsChannelOn.send)\n\n  return (\n    <Panel header=\"Channels\" shaded collapsible defaultExpanded>\n      <ButtonToolbar style={ButtonToolbarStyle}>\n        <ButtonGroup>\n          {['A0', 'AS', 'A2', 'A3', 'A4', 'A5'].map((name, i) => (\n            <Button\n              key={i}\n              appearance={isChannelOn[i] ? 'primary' : 'default'}\n              size=\"sm\"\n              disabled={\n                ['A2', 'A3'].includes(\n                  name\n                ) /* these are connected to the diff amp and generate noise */\n              }\n              onClick={() => {\n                const buffer = isChannelOn.slice()\n                buffer[i] = !buffer[i]\n                setIsChannelOn(buffer)\n              }}\n            >\n              {name}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </ButtonToolbar>\n      <div style={ButtonToolbarStyle}>\n        Oversample\n        <Slider\n          style={{ width: '50%' }}\n          value={oversamplingFactor}\n          onChange={setOversamplingFactor}\n          max={30}\n          min={0}\n          step={0.1}\n        />\n      </div>\n\n      <ButtonGroup>\n        <Button\n          appearance={fft0 ? 'primary' : 'default'}\n          disabled={!isChannelOn[0]}\n          size=\"sm\"\n          onClick={() => {\n            setFFT0(!fft0)\n          }}\n        >\n          FFT A0\n        </Button>\n        <Button\n          appearance={fft1 ? 'primary' : 'default'}\n          disabled={!isChannelOn[1]}\n          size=\"sm\"\n          onClick={() => {\n            setFFT1(!fft1)\n          }}\n        >\n          FFT AS\n        </Button>\n        <Button\n          appearance={xyMode ? 'primary' : 'default'}\n          disabled={!(isChannelOn[1] && isChannelOn[0])}\n          size=\"sm\"\n          onClick={() => {\n            setXYMode(!xyMode)\n          }}\n        >\n          XY\n        </Button>\n      </ButtonGroup>\n    </Panel>\n  )\n}\n","import { useState } from 'react'\n\nexport function useActiveBtns() {\n  const [state, setState] = useState(false)\n\n  const [timeout, setTimeout] = useState(-1)\n  const activateBtn = () => {\n    setState(true)\n    clearTimeout(timeout)\n    const timeoutId = window.setTimeout(() => setState(false), 200)\n    setTimeout(timeoutId)\n  }\n  return [state, activateBtn] as [typeof state, typeof activateBtn]\n}\n","import MouseTrap from 'mousetrap'\nimport React, { useEffect } from 'react'\nimport { useAmplifier, voltageRanges } from '../../communication/bindings'\nimport { formatVoltage } from '../formatters'\nimport { Icon, IconButton, SelectPicker } from 'rsuite'\nimport { useRecoilState } from 'recoil'\nimport { useActiveBtns } from './hooks'\n\nfunction Amplifier() {\n  const [amplifier, setAmplifier] = useRecoilState(useAmplifier.send)\n  const [isUpActive, tapUp] = useActiveBtns()\n  const [isDownActive, tapDown] = useActiveBtns()\n  useEffect(() => {\n    MouseTrap.bind('up', (e) => {\n      e.preventDefault()\n      tapUp()\n      setAmplifier(amplifier - 1)\n    })\n    MouseTrap.bind('down', (e) => {\n      e.preventDefault()\n      tapDown()\n      setAmplifier(amplifier + 1)\n    })\n    return () => {\n      MouseTrap.unbind('up')\n      MouseTrap.unbind('down')\n    }\n  }, [amplifier, setAmplifier, tapDown, tapUp])\n\n  return (\n    <div\n      style={{\n        width: ' 100%',\n        display: ' flex',\n        justifyContent: ' space-between',\n        marginBottom: 5\n      }}\n    >\n      <IconButton\n        active={isDownActive}\n        size=\"md\"\n        icon={<Icon icon=\"down\" />}\n        onClick={() => setAmplifier(amplifier + 1)}\n      />\n      <SelectPicker\n        searchable={false}\n        value={amplifier}\n        cleanable={false}\n        onChange={setAmplifier}\n        data={voltageRanges.map((v, i) => {\n          return {\n            label: formatVoltage(v / 10) + ' / div',\n            value: i\n          }\n        })}\n        style={{ flex: 1, marginLeft: 5, marginRight: 5 }}\n      />\n      <IconButton\n        active={isUpActive}\n        size=\"md\"\n        icon={<Icon icon=\"up\" />}\n        onClick={() => setAmplifier(amplifier - 1)}\n      />\n    </div>\n  )\n}\n\nexport default Amplifier\n","import MouseTrap from 'mousetrap'\nimport React, { useEffect } from 'react'\nimport {\n  useSecPerSample,\n  useSamplesPerBuffer,\n  constrain\n} from '../../communication/bindings'\nimport { formatTime } from '../formatters'\nimport { Icon, IconButton, SelectPicker } from 'rsuite'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport win from '../../win'\nimport { useActiveBtns } from './hooks'\nconst us = (n: number) => n / 1000000\nconst ms = (n: number) => n / 1000\nconst s = (n: number) => n\nconst offset = (list: { value: number }[], current: number, offset: number) => {\n  let i = list.map(({ value }) => value).indexOf(current) + offset\n  i = constrain(i, 0, list.length - 1)\n  return list[i].value\n}\nexport default function TimeScales() {\n  const [secPerSample, setSecPerSample] = useRecoilState(useSecPerSample.send)\n  const samples = useRecoilValue(useSamplesPerBuffer.send)\n  const [isLeftActive, tapLeft] = useActiveBtns()\n  const [isRightActive, tapRight] = useActiveBtns()\n\n  const perSample = [\n    us(100.8), // as fast as it goes\n    us(140.8), // in synch with adc clock\n    us(200),\n    us(500),\n    us(1000),\n    ms(2),\n    ms(5),\n    ms(10),\n    ms(20),\n    ms(50),\n    s(0.1),\n    s(0.2),\n    s(0.5),\n    s(1),\n    s(2),\n    s(5),\n    s(10),\n    s(20),\n    s(50),\n    s(100),\n    s(1000)\n  ].map((secPerDivision) => {\n    const secPerSample = (secPerDivision * 10) / samples\n    return {\n      label: formatTime(secPerDivision) + ' / div',\n      value: secPerSample\n    }\n  })\n  useEffect(() => {\n    MouseTrap.bind('right', (e) => {\n      e.preventDefault()\n      tapRight()\n      setSecPerSample(offset(perSample, secPerSample, 1))\n    })\n    MouseTrap.bind('left', (e) => {\n      e.preventDefault()\n      tapLeft()\n      setSecPerSample(offset(perSample, secPerSample, -1))\n    })\n    return () => {\n      MouseTrap.unbind('right')\n      MouseTrap.unbind('left')\n    }\n  }, [setSecPerSample, secPerSample, perSample, tapRight, tapLeft])\n  win.setSecPerSample = setSecPerSample\n\n  return (\n    <div\n      style={{\n        width: ' 100%',\n        display: ' flex',\n        justifyContent: ' space-between',\n        marginBottom: 5\n      }}\n    >\n      <IconButton\n        active={isLeftActive}\n        size=\"md\"\n        icon={<Icon icon=\"left\" />}\n        onClick={() => setSecPerSample(offset(perSample, secPerSample, -1))}\n      />\n      <SelectPicker\n        searchable={true}\n        value={secPerSample}\n        cleanable={false}\n        onChange={(n: number) => {\n          setSecPerSample(n)\n        }}\n        data={perSample}\n        style={{ flex: 1, marginLeft: 5, marginRight: 5 }}\n      />\n      <IconButton\n        active={isRightActive}\n        size=\"md\"\n        icon={<Icon icon=\"right\" />}\n        onClick={() => setSecPerSample(offset(perSample, secPerSample, 1))}\n      />\n    </div>\n  )\n}\n","import MouseTrap from 'mousetrap'\nimport React, { useEffect } from 'react'\nimport { isRunningState } from '../../communication/bindings'\nimport { Panel, Button } from 'rsuite'\nimport { useRecoilState } from 'recoil'\nimport Amplifier from './Amplifier'\nimport TimeScales from './TimeScales'\nimport { useActiveBtns } from './hooks'\n\nexport default function Scales() {\n  const [isRunning, setIsRunning] = useRecoilState(isRunningState)\n  const [isSpaceActive, tapSpace] = useActiveBtns()\n\n  useEffect(() => {\n    MouseTrap.bind('space', (e) => {\n      e.preventDefault()\n      tapSpace()\n      setIsRunning((isRunning) => !isRunning)\n    })\n    return () => {\n      MouseTrap.unbind('space')\n    }\n  }, [setIsRunning, tapSpace])\n\n  return (\n    <Panel header=\"Scales\" shaded collapsible defaultExpanded>\n      <Button\n        active={isSpaceActive}\n        style={{\n          color: 'white',\n          backgroundColor: isRunning ? 'green' : 'red',\n          width: '100%',\n          marginBottom: '10px'\n        }}\n        size=\"sm\"\n        onClick={() => {\n          setIsRunning(!isRunning)\n        }}\n      >\n        {(isRunning ? 'Run' : 'Hold') + ' [space]'}\n      </Button>\n      <TimeScales />\n      <Amplifier />\n    </Panel>\n  )\n}\n","import {\n  IconButton,\n  Icon,\n  ButtonToolbar,\n  Tag,\n  ButtonGroup,\n  Panel\n} from 'rsuite'\nimport React, { useEffect, useState } from 'react'\nimport { allDataState } from '../../communication/bindings'\nimport serial from '../../communication/Serial'\nimport { useSetRecoilState } from 'recoil'\nimport Uploader from './Uploader'\n\nconst serialOptions = {\n  baudRate: 115200 * 1,\n  bufferSize: 20000\n}\nconst ButtonToolbarStyle = {\n  marginTop: 10,\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center'\n}\ntype ConnectedState = 'Connected' | 'Disconnected' | 'Connecting...' | 'Error'\n\nfunction SerialControls() {\n  const [error, setError] = useState('')\n  const [serialState, setSerialState] = useState<ConnectedState>('Disconnected')\n  const setAllData = useSetRecoilState(allDataState)\n  useEffect(() => {\n    if (serialState !== 'Error') setError('')\n  }, [serialState])\n  useEffect(() => {\n    return serial.onData((data) => {\n      setAllData(data)\n    })\n  }, [setAllData])\n  useEffect(() => {\n    setSerialState('Connecting...')\n    serial\n      .connectWithPaired(serialOptions)\n      .then(() => setSerialState('Connected'))\n      .catch(() => setSerialState('Disconnected'))\n  }, [])\n  return (\n    <Panel shaded header=\"Serial\">\n      <ButtonGroup style={ButtonToolbarStyle}>\n        <IconButton\n          style={{ flex: 1 }}\n          appearance={serialState === 'Connected' ? 'primary' : undefined}\n          size=\"md\"\n          onClick={async () => {\n            serial\n              .connect(serialOptions)\n              .then(() => setSerialState('Connected'))\n              .catch((e) => {\n                setSerialState('Error')\n                setError(e.toString())\n              })\n          }}\n          icon={<Icon icon=\"arrow-right\" style={{ width: ' 100%' }} />}\n          placement=\"right\"\n        />\n        <IconButton\n          style={{ flex: 1 }}\n          size=\"md\"\n          appearance={serialState !== 'Connected' ? 'primary' : undefined}\n          onClick={async () => {\n            serial\n              .close()\n              .then(() => setSerialState('Disconnected'))\n              .catch(() => setSerialState('Error'))\n          }}\n          icon={<Icon icon=\"stop\" style={{ width: ' 100%' }} />}\n          placement=\"right\"\n        />\n\n        <IconButton\n          style={{ flex: 1 }}\n          size=\"md\"\n          onClick={async () => {\n            setSerialState('Connecting...')\n\n            await serial\n              .connectWithPaired(serialOptions)\n              .catch(() => serial.connect(serialOptions))\n              .then(() => setSerialState('Connected'))\n              .catch(() => setSerialState('Error'))\n          }}\n          icon={<Icon icon=\"recycle\" style={{ width: ' 100%' }} />}\n          placement=\"right\"\n        />\n      </ButtonGroup>\n\n      <ButtonToolbar style={ButtonToolbarStyle}>\n        State:&nbsp;\n        {(() => {\n          const color = {\n            Connected: 'green',\n            'Connecting...': 'yellow',\n            Error: 'red',\n            Disconnected: undefined\n          }[serialState]\n\n          return (\n            <Tag color={color}>\n              {serialState} {error}\n            </Tag>\n          )\n        })()}\n      </ButtonToolbar>\n      {serialState === 'Disconnected' && <Uploader />}\n    </Panel>\n  )\n}\n\nexport default SerialControls\n","import React from 'react'\nimport {\n  freeMemoryState,\n  frequencyState,\n  voltagesState\n} from '../../communication/bindings'\nimport { formatFreq, formatTime, formatVoltage } from '../formatters'\nimport { Panel, Tag } from 'rsuite'\nimport { useRecoilValue } from 'recoil'\n\nfunction FreeMemory() {\n  const freeMemory = useRecoilValue(freeMemoryState)\n  return <Tag>Mem: {freeMemory}bytes</Tag>\n}\n\nfunction Frequency() {\n  const frequency = useRecoilValue(frequencyState)\n  return <Tag>Freq: {formatFreq(frequency)}</Tag>\n}\nfunction Wavelength() {\n  const frequency = useRecoilValue(frequencyState)\n  return <Tag>Wavelength: {formatTime(1 / frequency)}</Tag>\n}\n\nconst style = {\n  width: ' 100%',\n  display: ' flex',\n  justifyContent: ' space-between'\n}\nfunction Voltages() {\n  const voltages = useRecoilValue(voltagesState)\n  return (\n    <>\n      <div style={style}>\n        <Tag>Vmin: {formatVoltage(voltages.vmin)}</Tag>\n        <Tag>Vmax: {formatVoltage(voltages.vmax)}</Tag>\n      </div>\n      <div style={style}>\n        <Tag>Vavr: {formatVoltage(voltages.vavr)}</Tag>\n        <Tag>Vp-p: {formatVoltage(voltages.vpp)}</Tag>\n      </div>\n    </>\n  )\n}\nexport default function Stats() {\n  return (\n    <div>\n      <Panel header=\"Voltages\" shaded collapsible defaultExpanded>\n        <Voltages />\n        <div style={style}>\n          <FreeMemory />\n          <Frequency />\n          <Wavelength />\n        </div>\n      </Panel>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport Trigger from './Trigger'\nimport Channels from './Channels'\nimport Scales from './Scales'\nimport SerialControls from './SerialControls'\nimport Stats from './Stats'\n\nfunction Controls() {\n  return (\n    <>\n      <SerialControls />\n      <Scales />\n      <Channels />\n      <Trigger />\n      <Stats />\n    </>\n  )\n}\n\nexport default Controls\n","import React from 'react'\n\nimport { Panel } from 'rsuite'\n\nexport default function About() {\n  return (\n    <Panel header=\"About\" shaded collapsible defaultExpanded>\n      <p>David Buezas 2020</p>\n      <a href=\"https://github.com/dbuezas/arduino-web-oscilloscope\">\n        https://github.com/dbuezas/arduino-web-oscilloscope\n      </a>\n    </Panel>\n  )\n}\n","import React from 'react'\n\nimport { Panel, Button, Notification, Steps } from 'rsuite'\nimport useCopy from '@react-hook/copy'\n\nconst chromeFlagsUrl =\n  'chrome://flags/#enable-experimental-web-platform-features'\nconst styles = {\n  width: '200px',\n  display: 'inline-table',\n  verticalAlign: 'top'\n}\nfunction EnableSerialInstructions() {\n  const { copy } = useCopy(chromeFlagsUrl)\n\n  return (\n    <div className=\"App\">\n      <Panel\n        shaded\n        bordered\n        style={{\n          margin: '20px auto',\n          overflow: 'scroll',\n          height: '100%',\n          zoom: 0.8\n        }}\n      >\n        <Panel\n          header={\n            <>\n              <p style={{ fontSize: 30 }}>\n                Enable experimental web platform features to activate the Web\n                Serial API{' '}\n              </p>\n              <br />\n            </>\n          }\n        >\n          <Steps vertical style={styles}>\n            <Steps.Item\n              title=\"Copy the chrome flags url\"\n              description={\n                <Button\n                  color=\"green\"\n                  onClick={() => {\n                    copy()\n                    Notification.success({\n                      title: 'It is now in your clipboard',\n                      description: chromeFlagsUrl\n                    })\n                  }}\n                >\n                  {chromeFlagsUrl}\n                </Button>\n              }\n            />\n            <Steps.Item\n              title=\"Paste it in the address bar of the browser and press [enter]\"\n              description={\n                <>\n                  <img\n                    alt=\"\"\n                    src={process.env.PUBLIC_URL + '/address-bar.png'}\n                  ></img>\n                  <p>\n                    Right there. This will take you to the the page where you\n                    can support for the serial port.\n                  </p>\n                </>\n              }\n            />\n            <Steps.Item\n              title=\"Enable the experimental web platform features\"\n              description={\n                <img\n                  alt=\"\"\n                  src={\n                    process.env.PUBLIC_URL +\n                    '/ExperimentalWebPlatformFeatures.png'\n                  }\n                ></img>\n              }\n            />\n            <Steps.Item\n              title=\"Reload this page\"\n              description=\"And you'll be ready to use the oscilloscope\"\n            />\n            <Steps.Item\n              title=\"Enjoy\"\n              description={\n                <>\n                  <img\n                    width=\"500px\"\n                    alt=\"\"\n                    src={process.env.PUBLIC_URL + '/screenshot.png'}\n                  ></img>\n                  <p>\n                    Do not do something stupid, the board is connected to your\n                    computer so it shares Ground with it, also do not push more\n                    than 5v to it.\n                  </p>\n                </>\n              }\n            />\n          </Steps>\n        </Panel>\n      </Panel>\n    </div>\n  )\n}\n\nexport default EnableSerialInstructions\n","import React from 'react'\nimport Plot from './Plot/Plot'\n\nimport Controls from './Controls'\nimport { Panel, Container, Content, Sidebar } from 'rsuite'\nimport About from './About'\nimport EnableSerialInstructions from './EnableSerialInstructions'\nconst AndroidSerialLoader = React.lazy(() => import('./AndroidSerialLoader'))\n\nconst isAndroid = navigator.userAgent.toLowerCase().indexOf('android') > -1\n\nfunction getChromeVersion() {\n  const raw = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./)\n  return Number(raw ? parseInt(raw[2], 10) : false)\n}\nfunction App() {\n  if (!isAndroid && getChromeVersion() < 86)\n    return <p>Requires an updated version of Chrome (≥ 86.x.x)</p>\n  if (!isAndroid && !navigator.serial) return <EnableSerialInstructions />\n  return (\n    <div className=\"App\">\n      {isAndroid && AndroidSerialLoader}\n      <Container>\n        <Content>\n          <Panel shaded>\n            <Plot />\n          </Panel>\n        </Content>\n        <Sidebar width={261}>\n          <Controls />\n          <About />\n        </Sidebar>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport { RecoilRoot } from 'recoil'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}